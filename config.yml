
# Config for https://github.com/V4NSH4J/discord-mass-DM-GO


#                               #
# ----  UserBot Behaviour  ---- #
#                               # 

# Duration in seconds that one account waits in between of sends 2 messages.
# Due to how discord rate limits are structured, you can only send 10 new messages every 10 minutes.
# To avoid hitting the rate limit, the recommended duration is 60, but this can be slow.
# Default: 6
# Type: int
individual_delay: 6


# Duration in seconds that the account sleeps for when rate limited.
# If you send 10 messages very quickly, this rate limit is of 600 seconds (10 minutes).
# With the recommended settings, you'd never hit it, so it's recommended to set at 60.
# Default: 650
# Type: int
rate_limit_delay: 650


# Duration in Milliseconds (1/1000th of a second) that the program waits in between of starting 2 instances.
# Perhaps one of the most important settings which is why it has it's own section.
# Recommended offset is (60/number of tokens) * 1000 but it does not matter with a few tokens and can be set to any small value like 50.
# Defaut: 100
# Type: int
offset: 100


# Program will avoid sending DMs to IDs it has already messaged.
# When someone is messaged, his ID is added to "input/completed.txt".
# Adding IDs to "input/completed.txt" will in a way blacklist them.
# Default: true
# Type: bool
skip_completed: true


# Program will avoid sending DMs to IDs it has already attempted to message but failed.
# When someone is attempted to be messaged but fails, his ID is added to "input/failed.txt".
# Default: true
# Type: bool
skip_failed: true

# After completion of Mass DM, DMDGO will attempt to remove non-working tokens from input/tokens.txt
# Default: true
# Type: bool
remove_dead_tokens: true

# After completion of Mass DM, DMDGO will attempt to remove completed members from "input/memberids.txt" leaving behind only the failed/unattempted IDs.
# This is so the user can re-run the program to target them.
# Default: true
# Type: bool
remove_completed_members: true


# Once a token is locked/disabled, it will stop DMing if this is set to true.
# Recommended to be true.
# Default: true
# Type: bool
stop_dead_tokens: true


# DMDGO will check if the user has a mutual guild with the token and also gather the user's Name and Discrim.
# This has been buggy in the past. Recommended to be set to false.
# Default: false
# Type: bool
check_mutual: false


# DMDGO will send a friend request to everyone in the list before attempting to DM them. Requires online_tokens and check_mutual.
# It needs online_tokens as a precautionary measure. Incase a token has never connected to gateway before and it tries sending a friend request, it will get locked.
# Default: false
# Type: bool
friend_before_DM: false


# DMDGO will online tokens before starting mass DM. This is a very important setting, certain functions like receive_messages, friend_before_DM and call cannot be used without it.
# But if you're not planning to use those features anyways, it can be set to false.
# Default: false
# Type: bool
online_tokens: false


# Time in milliseconds DMDGO will sleep between 2 consecutive scrapes to avoid being websocket-rate-limited.
# Default: 2000
# Type: int
online_scraper_delay: 2000


# After a succesful DM, DMDGO will attempt to call the user. This is unnecessary as it would make no difference.
# The calls don't "ring" if the users are not friended which they're not in most cases. So in essence, it would be a call without a ring. Recommended is false.
# Default: false
# Type: bool
call: false


# Number of maximum DMs you want your tokens to send. If set to 0 they will send DMs till they are locked or the list is completed.
# Default: 0
# Type: int
max_dms_per_token: 0


# If set to true, the messages from other users will be logged on console and in "input\received.txt".
# Default: false
# Type: bool
receive_messages: false


# If True, the program will block users after DMing them.
# Default: false
# Type: bool
block_after_dm: false


# If True, the program will close the user's DMs with them after DMing them.
# This won't delete the message, just hide the channel for the bot-user.
# Default: false
# Type: bool
close_dm_after_message: false


# Maximum attempts to rejoin token to server. Use minimum of 2. Introduced since Discord added Captchas to join servers on some tokens.
# Default: 3
# Type: int
max_attempt_invite_rejoin: 3



#                            #
# ----  Proxy Settings  ---- #
#                            # 


# If set to true, DMDGO will use proxies from input\proxies.txt
# Default: true
# Type: bool
proxy_from_file: true


# What protocal to use when using proxies.
# Default: http
# Type: str
proxy_protocol: http


# If set to true, websocket connections will use proxy as well. Recommend keeping it at false unless you have very good proxies.
# Default: false
# Type: bool
use_proxy_for_gateway: false


# Whether to use your proxies for solving captchas.
# Default: false
# Type: bool
proxy_for_captcha: false


# Timeout for all requests in seconds. Increase if slow connection or proxies.
# Default: 60
# Type: int
timeout: 60


# Closes the underlying TCP connection after every request. Might be helpful to change IPs on every request with rotating proxies.
# Only used with proxies_from_file and not with the proxy field in config. Added because older versions of DMDGO which used only rotating proxies did this by default.
# Default: false
# Type: bool
disable_keep_alives: false



#                              #
# ----  Captcha Settings  ---- #
#                              # 


# Domain of the Captcha API you wish to use. The current supported Captcha APIs are: 
# - capmonster.cloud
# - anti-captcha.com
# - 2captcha.com
# - rucaptcha.com
# - deathbycaptcha.com
# - anycaptcha.com
# - azcaptcha.com
# - solvecaptcha.com
# Type: str (as url)
captcha_api: "anti-captcha.com"


# Your Captcha API Key with balance loaded
# Type: str
captcha_api_key: "your-captcha-key-here"



#                               #
# ----  Scraping Settings  ---- #
#                               # 


# When scraping, save usernames.
# Default: false
# Type: bool
scrape_usernames: false 


# When scraping, save avatars.
# Default: false
# Type: bool
scrape_avatars: false



